---
import BaseLayout from '../../layouts/BaseLayout.astro';
import CTA from '../../components/sections/CTA.astro';
import { getCollection } from 'astro:content';
import ExecutiveSummary from '../../components/reports/ExecutiveSummary.astro';
import DataVisualization from '../../components/reports/DataVisualization.tsx';
import FinancialHighlights from '../../components/reports/FinancialHighlights.astro';
import ClientInsights from '../../components/reports/ClientInsights.astro';
import MarketAnalysis from '../../components/reports/MarketAnalysis.astro';
import IndustryTrends from '../../components/reports/IndustryTrends.astro';
import FutureOutlook from '../../components/reports/FutureOutlook.astro';

export async function getStaticPaths() {
  const reports = await getCollection('reports');
  return reports.map((entry) => ({
    params: { slug: entry.data.slug },
    props: { report: entry.data },
  }));
}

const { report } = Astro.props;

if (!report) {
  return Astro.redirect('/404');
}

// Define which components to render for each report (matching React version)
const getReportSections = (slug: string) => {
  switch (slug) {
    case '2024-strategic-business-intelligence':
      return [
        { component: 'ExecutiveSummary', key: 'executive' },
        { component: 'DataVisualization', key: 'data-viz' },
        { component: 'FinancialHighlights', key: 'financial' },
        { component: 'ClientInsights', key: 'insights' },
        { component: 'FutureOutlook', key: 'outlook' }
      ];
    case 'market-performance-analysis-2024':
      return [
        { component: 'ExecutiveSummary', key: 'executive' },
        { component: 'MarketAnalysis', key: 'market' },
        { component: 'IndustryTrends', key: 'trends' },
        { component: 'FinancialHighlights', key: 'financial' },
        { component: 'FutureOutlook', key: 'outlook' }
      ];
    case 'regional-performance-global-expansion':
      return [
        { component: 'ExecutiveSummary', key: 'executive' },
        { component: 'MarketAnalysis', key: 'market' },
        { component: 'DataVisualization', key: 'data-viz' },
        { component: 'ClientInsights', key: 'insights' },
        { component: 'FutureOutlook', key: 'outlook' }
      ];
    case 'technology-infrastructure-report':
      return [
        { component: 'ExecutiveSummary', key: 'executive' },
        { component: 'IndustryTrends', key: 'trends' },
        { component: 'DataVisualization', key: 'data-viz' },
        { component: 'FinancialHighlights', key: 'financial' },
        { component: 'FutureOutlook', key: 'outlook' }
      ];
    default:
      return [
        { component: 'ExecutiveSummary', key: 'executive' },
        { component: 'DataVisualization', key: 'data-viz' }
      ];
  }
};

const reportSections = getReportSections(report.slug);
const allReports = await getCollection('reports');
const relatedReports = allReports.filter(r => r.data.id !== report.id).slice(0, 2).map(r => r.data);
---

<BaseLayout 
  title={report.title}
  description={report.subtitle}
>
  <!-- Header -->
  <section class="pt-32 pb-16 lg:pt-40 lg:pb-24">
    <div class="max-w-7xl mx-auto px-6 lg:px-8">
      <div class="space-y-8">
        <a 
          href="/reports" 
          class="inline-flex items-center space-x-2 text-foreground hover:text-foreground transition-colors group"
        >
          <svg class="h-4 w-4 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
          <span class="text-sm font-light tracking-wide">Back to Reports</span>
        </a>
        
        <div class="grid lg:grid-cols-3 gap-12">
          <div class="lg:col-span-2 space-y-8">
            <div class="space-y-4">
              <div class="flex items-center space-x-3">
                <span class="px-3 py-1 bg-foreground/10 text-foreground text-xs font-light rounded-full">
                  {report.category}
                </span>
                {report.featured && (
                  <span class="px-3 py-1 bg-blue-500/10 text-blue-500 text-xs font-light rounded-full">
                    Featured
                  </span>
                )}
              </div>
              
              <h1 class="text-4xl md:text-5xl lg:text-6xl font-light leading-[1.1] tracking-tight text-foreground">
                {report.title}
              </h1>
              
              <p class="text-xl font-light text-foreground leading-relaxed">
                {report.subtitle}
              </p>
            </div>
            
            <div class="prose prose-lg max-w-none">
              <p class="text-lg font-light text-foreground/80 leading-relaxed">
                {report.description}
              </p>
            </div>
          </div>
          
          <div class="space-y-8">
            <div class="bg-foreground/5 rounded-lg p-6 space-y-6">
              <h3 class="text-lg font-light text-foreground">Report Details</h3>
              
              <div class="space-y-4">
                <div class="flex items-center space-x-3">
                  <svg class="h-4 w-4 text-foreground/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                  </svg>
                  <span class="text-sm font-light text-foreground">{report.author}</span>
                </div>
                <div class="flex items-center space-x-3">
                  <svg class="h-4 w-4 text-foreground/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  <span class="text-sm font-light text-foreground">{report.publishDate}</span>
                </div>
                <div class="flex items-center space-x-3">
                  <svg class="h-4 w-4 text-foreground/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <span class="text-sm font-light text-foreground">{report.readTime}</span>
                </div>
              </div>
              
              <div class="space-y-3">
                <div class="flex items-center space-x-2">
                  <svg class="h-4 w-4 text-foreground/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                  </svg>
                  <span class="text-sm font-light text-foreground">Tags</span>
                </div>
                <div class="flex flex-wrap gap-2">
                  {report.tags.map((tag) => (
                    <span key={tag} class="px-2 py-1 bg-foreground/10 text-foreground text-xs font-light rounded">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Report Sections -->
  {reportSections.map((section) => (
    <div key={section.key}>
      {section.component === 'ExecutiveSummary' && <ExecutiveSummary />}
      {section.component === 'DataVisualization' && <DataVisualization client:visible />}
      {section.component === 'FinancialHighlights' && <FinancialHighlights />}
      {section.component === 'ClientInsights' && <ClientInsights />}
      {section.component === 'MarketAnalysis' && <MarketAnalysis />}
      {section.component === 'IndustryTrends' && <IndustryTrends />}
      {section.component === 'FutureOutlook' && <FutureOutlook />}
    </div>
  ))}

  <!-- Related Reports -->
  {relatedReports.length > 0 && (
    <section class="py-16 lg:py-24 bg-foreground/5">
      <div class="max-w-7xl mx-auto px-6 lg:px-8">
        <div class="space-y-12">
          <h2 class="text-3xl font-light tracking-tight text-foreground">
            Related Reports
          </h2>
          
          <div class="grid md:grid-cols-2 gap-8">
            {relatedReports.map((relatedReport) => (
              <a
                key={relatedReport.id}
                href={`/reports/${relatedReport.slug}`}
                class="group block bg-background border border-foreground/10 rounded-lg p-6 hover:border-foreground/30 hover:shadow-xl transition-all duration-300"
              >
                <div class="space-y-4">
                  <div class="flex items-center justify-between">
                    <span class="px-3 py-1 bg-foreground/10 text-foreground text-xs font-light rounded-full">
                      {relatedReport.category}
                    </span>
                    <span class="text-xs font-light text-foreground/40">
                      {relatedReport.readTime}
                    </span>
                  </div>
                  
                  <h3 class="text-xl font-light text-foreground group-hover:text-foreground/80 transition-colors">
                    {relatedReport.title}
                  </h3>
                  
                  <p class="text-sm font-light text-foreground line-clamp-2">
                    {relatedReport.description}
                  </p>
                  
                  <div class="text-xs font-light text-foreground group-hover:text-blue-500 transition-colors">
                    Read Report â†’
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      </div>
    </section>
  )}

  <CTA />
</BaseLayout>