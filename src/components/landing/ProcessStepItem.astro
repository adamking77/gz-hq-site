---
import Text from '@/components/fundations/elements/Text.astro';

interface Props {
  title: string;
  description: string;
  iconSvg?: string;
  isLast?: boolean;
  class?: string;
}

const { title, description, iconSvg, isLast = false, class: extraClass, ...rest } = Astro.props;
---

<div class:list={["relative group rounded-lg mb-12", extraClass]} {...rest}>
  <div class="flex gap-x-3 transition-transform duration-300 ease-in-out group-hover:scale-105">
  <!-- Icon Column -->
  <div class:list={[
    "relative last:after:hidden after:absolute after:top-8 after:bottom-0 after:start-3.5 after:w-px after:-translate-x-[0.5px] group-hover:after:bg-borderAlt dark:group-hover:after:bg-borderAlt",
    isLast ? "last:after:hidden" : "after:bg-borderAlt dark:after:bg-borderAlt"
  ]}>
    <div class="relative z-10 size-7 flex justify-center items-center">
      <div class="size-2 rounded-full bg-borderAlt border-2 border-borderAlt dark:bg-borderAlt dark:border-borderAlt transition-colors duration-200 ease-in-out group-hover:bg-borderAlt dark:group-hover:bg-borderAlt group-hover:border-borderAlt dark:group-hover:border-borderAlt"></div>
    </div>
  </div>

  <!-- Content Column -->
  <div class="grow p-2 pb-8">
    {iconSvg && (
      <div class="mb-3 h-22 w-22 text-accent dark:text-borderAlt transition-colors duration-200 ease-in-out group-hover:text-gray-900 dark:group-hover:text-white" set:html={iconSvg} />
    )}
    {!iconSvg && (
      <!-- Icon placeholder -->
    )}
    <Text tag="h3" variant="textBase" class="font-semibold text-accent dark:text-white mb-1">
      {title}
    </Text>
    <Text tag="p" variant="textBase" class="text-[#222222] dark:text-borderAlt">
      {description}
    </Text>
  </div>
  </div>
</div>

<style>
  /* Removed previous .group:hover .pattern-recognition-icon rules */
</style>