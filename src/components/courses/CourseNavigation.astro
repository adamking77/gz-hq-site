---
import { getCollection, type CollectionEntry } from "astro:content";
import Text from "@/components/fundations/elements/Text.astro";

interface Props {
  course: CollectionEntry<'courses'>;
  currentLessonSlug: string;
}

const { course, currentLessonSlug } = Astro.props;

let prevLesson: { title: string; slug: string; url: string } | null = null;
let nextLesson: { title: string; slug: string; url: string } | null = null;

let foundCurrent = false;

for (const module of course.data.modules) {
  for (const lesson of module.lessons) {
    if (foundCurrent) {
      nextLesson = {
        title: lesson.title,
        slug: lesson.slug,
        url: `/courses/${course.slug}/${lesson.slug}`,
      };
      break; // Found the next lesson, exit inner loop
    }

    if (lesson.slug === currentLessonSlug) {
      foundCurrent = true;
    } else if (!foundCurrent) {
      prevLesson = {
        title: lesson.title,
        slug: lesson.slug,
        url: `/courses/${course.slug}/${lesson.slug}`,
      };
    }
  }
  if (foundCurrent && nextLesson) {
    break; // Found current and next lesson, exit outer loop
  }
}
---

<nav class="flex justify-between items-center mt-12 pt-4 border-t dark:border-white/10 border-black/10">
  {prevLesson ? (
    <a href={prevLesson.url} class="flex items-center gap-2 text-blue-600 hover:underline">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
      <Text tag="span" variant="textSM" class="font-medium">
        {prevLesson.title}
      </Text>
    </a>
  ) : (
    <span></span>
  )}

  {nextLesson ? (
    <a href={nextLesson.url} class="flex items-center gap-2 text-blue-600 hover:underline ml-auto">
      <Text tag="span" variant="textSM" class="font-medium">
        {nextLesson.title}
      </Text>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  ) : (
    <span></span>
  )}
</nav>